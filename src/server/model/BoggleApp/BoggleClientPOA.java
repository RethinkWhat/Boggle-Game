package server.model.BoggleApp;


/**
* server.model.client.model.BoggleApp/BoggleClientPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from shared/BoggleClient.idl
* Thursday, May 2, 2024 6:15:57 PM PST
*/

public abstract class BoggleClientPOA extends org.omg.PortableServer.Servant
 implements BoggleClientOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("validateAccount", new java.lang.Integer (0));
    _methods.put ("attemptJoin", new java.lang.Integer (1));
    _methods.put ("getLobbyMembers", new java.lang.Integer (2));
    _methods.put ("getCurrLobbyTimerValue", new java.lang.Integer (3));
    _methods.put ("getLetters", new java.lang.Integer (4));
    _methods.put ("getGameDurationVal", new java.lang.Integer (5));
    _methods.put ("sendUserWordList", new java.lang.Integer (6));
    _methods.put ("getRoundWinner", new java.lang.Integer (7));
    _methods.put ("getNextRoundLetterSet", new java.lang.Integer (8));
    _methods.put ("exitGameRoom", new java.lang.Integer (9));
    _methods.put ("getOverallWinner", new java.lang.Integer (10));
    _methods.put ("getLeaderboard", new java.lang.Integer (11));
    _methods.put ("editInfo", new java.lang.Integer (12));
    _methods.put ("editPassword", new java.lang.Integer (13));
    _methods.put ("getUserTotalPoints", new java.lang.Integer (14));
    _methods.put ("getUserPointsOngoingGame", new java.lang.Integer (15));
    _methods.put ("getNumberOfMatches", new java.lang.Integer (16));
    _methods.put ("getNumberOfWins", new java.lang.Integer (17));
    _methods.put ("getCurrGameLeaderboard", new java.lang.Integer (18));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // server.model.client.model.BoggleApp/BoggleClient/validateAccount
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           this.validateAccount (username, password);
           out = $rh.createReply();
         } catch (accountLoggedIn $ex) {
           out = $rh.createExceptionReply ();
           accountLoggedInHelper.write (out, $ex);
         } catch (accountDoesNotExist $ex) {
           out = $rh.createExceptionReply ();
           accountDoesNotExistHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // server.model.client.model.BoggleApp/BoggleClient/attemptJoin
       {
         String username = in.read_string ();
         this.attemptJoin (username);
         out = $rh.createReply();
         break;
       }

       case 2:  // server.model.client.model.BoggleApp/BoggleClient/getLobbyMembers
       {
         LobbyUser $result[] = null;
         $result = this.getLobbyMembers ();
         out = $rh.createReply();
         lobbyUserListHelper.write (out, $result);
         break;
       }

       case 3:  // server.model.client.model.BoggleApp/BoggleClient/getCurrLobbyTimerValue
       {
         org.omg.CORBA.BooleanHolder validLobby = new org.omg.CORBA.BooleanHolder ();
         long $result = (long)0;
         $result = this.getCurrLobbyTimerValue (validLobby);
         out = $rh.createReply();
         out.write_longlong ($result);
         out.write_boolean (validLobby.value);
         break;
       }

       case 4:  // server.model.client.model.BoggleApp/BoggleClient/getLetters
       {
         int gameID = in.read_long ();
         String $result = null;
         $result = this.getLetters (gameID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // server.model.client.model.BoggleApp/BoggleClient/getGameDurationVal
       {
         int gameID = in.read_long ();
         long $result = (long)0;
         $result = this.getGameDurationVal (gameID);
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }

       case 6:  // server.model.client.model.BoggleApp/BoggleClient/sendUserWordList
       {
         int gameID = in.read_long ();
         String username = in.read_string ();
         String wordList[] = wordListHelper.read (in);
         this.sendUserWordList (gameID, username, wordList);
         out = $rh.createReply();
         break;
       }

       case 7:  // server.model.client.model.BoggleApp/BoggleClient/getRoundWinner
       {
         int gameID = in.read_long ();
         String $result = null;
         $result = this.getRoundWinner (gameID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // server.model.client.model.BoggleApp/BoggleClient/getNextRoundLetterSet
       {
         int gameRoomID = in.read_long ();
         String $result = null;
         $result = this.getNextRoundLetterSet (gameRoomID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 9:  // server.model.client.model.BoggleApp/BoggleClient/exitGameRoom
       {
         String username = in.read_string ();
         this.exitGameRoom (username);
         out = $rh.createReply();
         break;
       }

       case 10:  // server.model.client.model.BoggleApp/BoggleClient/getOverallWinner
       {
         int gameID = in.read_long ();
         String $result = null;
         $result = this.getOverallWinner (gameID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 11:  // server.model.client.model.BoggleApp/BoggleClient/getLeaderboard
       {
         userInfo $result[] = null;
         $result = this.getLeaderboard ();
         out = $rh.createReply();
         leaderboardsHelper.write (out, $result);
         break;
       }

       case 12:  // server.model.client.model.BoggleApp/BoggleClient/editInfo
       {
         try {
           String username = in.read_string ();
           String toEdit = in.read_string ();
           String newInfo = in.read_string ();
           this.editInfo (username, toEdit, newInfo);
           out = $rh.createReply();
         } catch (updateFailed $ex) {
           out = $rh.createExceptionReply ();
           updateFailedHelper.write (out, $ex);
         }
         break;
       }

       case 13:  // server.model.client.model.BoggleApp/BoggleClient/editPassword
       {
         try {
           String username = in.read_string ();
           String oldPass = in.read_string ();
           String newPass = in.read_string ();
           this.editPassword (username, oldPass, newPass);
           out = $rh.createReply();
         } catch (updateFailed $ex) {
           out = $rh.createExceptionReply ();
           updateFailedHelper.write (out, $ex);
         }
         break;
       }

       case 14:  // server.model.client.model.BoggleApp/BoggleClient/getUserTotalPoints
       {
         String username = in.read_string ();
         int $result = (int)0;
         $result = this.getUserTotalPoints (username);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 15:  // server.model.client.model.BoggleApp/BoggleClient/getUserPointsOngoingGame
       {
         int gameID = in.read_long ();
         String username = in.read_string ();
         int $result = (int)0;
         $result = this.getUserPointsOngoingGame (gameID, username);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 16:  // server.model.client.model.BoggleApp/BoggleClient/getNumberOfMatches
       {
         String username = in.read_string ();
         int $result = (int)0;
         $result = this.getNumberOfMatches (username);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 17:  // server.model.client.model.BoggleApp/BoggleClient/getNumberOfWins
       {
         String username = in.read_string ();
         int $result = (int)0;
         $result = this.getNumberOfWins (username);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 18:  // server.model.client.model.BoggleApp/BoggleClient/getCurrGameLeaderboard
       {
         int gameID = in.read_long ();
         userInfo $result[] = null;
         $result = this.getCurrGameLeaderboard (gameID);
         out = $rh.createReply();
         leaderboardsHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:server.model.client.model.BoggleApp/BoggleClient:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public BoggleClient _this() 
  {
    return BoggleClientHelper.narrow(
    super._this_object());
  }

  public BoggleClient _this(org.omg.CORBA.ORB orb) 
  {
    return BoggleClientHelper.narrow(
    super._this_object(orb));
  }


} // class BoggleClientPOA
