module BoggleApp {
    struct Leaderboard {
        string username;
        long points;
    };
    typedef sequence<Leaderboard> userRanking;

    interface BoggleClient {
        boolean validateAccount(in string username, in string password);

        long long attemptJoin(out boolean timerDone);

        // RETURN GAMEID duration. This creates a game object in sql database. It also creates a round object in database wherein round number is 1
        long joinGameRoom(in username, out duration);

        // Returns the round letter set, as well as the round id, if round id = -1 game is over.
        long startRound(in username, in gameID, out string letterSet);

        // Get the curr time of the countdown in server
        long long getGameDurationVal(in gameID, in roundID);

        // Get the username of the winner of the round when countdown time in client is 0)
        string getRoundWinner(in username, in gameID, in roundID, in string wordsEntered);

        // Return username of winner
        string getOverallWinner(in gameId);


        string getDuration(in long gameID);

        long getRoundID(in long gameID, in string username);

        long getPoints(in string username);

        string getWinnerIfAny(in long gameID);

        string getWordList(in long gameID, in long roundID);

        userRanking getLeaderboard();

        long getUserPoints(in string username);

        boolean editInfo(in string username, in string toEdit, in string newInfo);
        long getMatches(in string username);
        long getWins(in string username);
        boolean editPassword(in string username, in string oldPass, in string newPass);
    };
};
