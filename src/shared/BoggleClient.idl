module BoggleApp {
    struct userInfo {
        string username;
        string pfpAddress;
        long points;
    };
    struct LobbyUser {
        string username;
        string pfpAddress;
    };

    typedef sequence<userInfo> leaderboards;
    typedef sequence<LobbyUser> lobbyUserList;
    typedef sequence<string> wordList;

    exception accountLoggedIn {
        string reason;
    };

    exception accountDoesNotExist {
        string reason;
    };

    exception updateFailed {
        string reason;
    };

    interface BoggleClient {

        void validateAccount(in string username, in string password) raises (accountLoggedIn, accountDoesNotExist);

        void attemptJoin(in string username);

        lobbyUserList getLobbyMembers();

        long long getCurrLobbyTimerValue();

        long joinGameRoom(out long long duration);

        void startRound(in long gameID, out long roundNumber, out string letterList);

        long long getGameDurationVal(in long gameID);

        void sendUserWordList(in long gameID, in string username, in wordList wordList);

        void exitGameRoom(in string username);

        string getOverallWinner(in long gameID);

        string getRoundWinner(in long gameID);

        leaderboards getLeaderboard();

        void editInfo(in string username, in string toEdit, in string newInfo) raises (updateFailed);
        void editPassword(in string username, in string oldPass, in string newPass) raises (updateFailed);

        long getGamePoints(in string username);
        long getNumberOfMatches(in string username);
        long getNumberOfWins(in string username);

        long getUserRoundPoints(in string username);

        leaderboards getCurrGameLeaderboard(in long gameID);
    };
};
